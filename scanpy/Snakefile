with open(config['SAMPLES']) as fp:
    samples = fp.read().splitlines()



rule all:
         input:
            expand("analysed_{all}.h5ad", all= config['ALL']),
            expand("clustered_{all}.h5ad", all= config['ALL']), 
            expand("annotated_{all}.h5ad", all=config['ALL']),
            "15days.h5ad", 
            "35days.h5ad", 
            "diff_15days.h5ad",
            "diff_35days.h5ad",
            

             #expand("{subset}_{all}.h5ad", subset=config['SUBSET'], all=config['ALL'])


rule analyse:
       input:
          expand("{all}.h5ad", all=config['ALL'])
       output:
          expand("analysed_{all}.h5ad", all=config['ALL'])
       shell:
          """
          python analyse.py {input}
          """

rule cluster: 
       input:
          expand("analysed_{all}.h5ad", all=config['ALL']) 
       output:
          expand("clustered_{all}.h5ad", all=config['ALL'])
       shell:
          """
          python cluster.py {input}
          """

rule annotate:
       input:
          expand("clustered_{all}.h5ad", all=config['ALL'])
       output:
          expand("annotated_{all}.h5ad", all=config['ALL'])
       params: 
         annofile = config['ANNOFILE'] 
       shell:
          """
          python annotate.py {input} {params.annofile} 
          """

rule subsetDays: 
      input:
          expand("annotated_{all}.h5ad", all=config['ALL'])
      output: 
          "15days.h5ad",
          "35days.h5ad",
      shell:  
         """ 
         python subsetDays.py {input}
         """ 
rule dge:
      input: 
          "15days.h5ad",
          "35days.h5ad",
      output: 
            "diff_15days.h5ad",
            "diff_35days.h5ad"
      shell: 
          """ 
          python diff.py {input[0]} 
          python diff.py {input[1]} 
          """ 
rule subset: 
       input:
          expand("annotated_{all}.h5ad", all=config['ALL'])
       output:
          expand("{subset}_{all}.h5ad", subset=config['SUBSET'], all=config['ALL'])
       params:
         subset = config['SUBSET']
       shell:
          """
          python subset.py {input} {params.subset}
          """

